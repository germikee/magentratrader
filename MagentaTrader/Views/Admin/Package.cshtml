@{
    ViewBag.Title = "Package";
}

<link href="/css/bootstrap.min.css" rel="stylesheet" />
<link href="/css/styles.css" rel="stylesheet" />

<script src="/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>

<script src="/js/date.js"></script>

<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.chart.min.js"></script>

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />

@*Menu*@
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="~/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"></span></a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li role="presentation"><a href="~/Admin/user">Users</a></li>
                <li role="presentation"><a href="~/Admin/Event">Event</a></li>
                <li role="presentation"><a href="~/Admin/Sales">Sales</a></li>
                <li role="presentation"><a href="~/Admin/Product">Products</a></li>
                <li role="presentation" class="active"><a href="~/Admin/Package">Packages</a></li>
                <li role="presentation"><a href="~/Admin/News">News</a></li>
                <li role="presentation"><a href="~/Admin/"><i class="fa fa-home"></i></a></li>
            </ul>
        </div>
    </div>
</nav>

@*List*@
<div id="DivProductPackages">
    <div class="container">

        <div class="row">
            <h2 class="section-heading">Product Package</h2>
            <div class="col-lg-11">
                <h4>Product Packages</h4>
            </div>
            <div class="col-lg-1">
                <button id="CmdAddProductPackage" type="submit" class="btn btn-primary" onclick="CmdProductPackageAdd_OnClick()">Add</button>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-lg-12">
                <div id="ProductPackageGrid" class="grid"></div>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="btn-group col-md-7" id="naviagtionPageProductPackage">
                <button type="button" class="btn btn-default" id="btnMoveToFirstPageProductPackage">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageProductPackage">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageProductPackage"></button>
                <button type="button" class="btn btn-default" id="btnMoveToNextPageProductPackage">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToLastPageProductPackage">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
        </div>

    </div>
</div>

@*Edit Detail*@
<div class="modal fade" id="ProductPackageEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Product Package Edit</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Product Package </dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_Id" type="hidden" />
                        <input class="form-control" id="ProductPackageEdit_ProductPackageDescription" type="text" />
                    </dd>
                    <dt>SKU</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_SKU" type="text" />
                    </dd>
                    <dt>Price</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_Price" type="text" />
                    </dd>
                    <dt>Product</dt>
                    <dd>
                        <div id="cboProductPackageEdit_ProductId"></div>
                        <input class="form-control" id="ProductPackageEdit_ProductId" type="hidden" readonly="true" />
                    </dd>
                    <dt>Is Available</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_IsAvailable" type="checkbox" />
                    </dd>
                    <dt>With Coupon</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_WithCoupon" type="checkbox" />
                    </dd>
                    <dt>With Software</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_WithSoftware" type="checkbox" />
                    </dd>
                    <dt>Is Reoccuring</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_IsReoccuring" type="checkbox" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="ProductPackageEdit_Particulars" type="text" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdProductPackageEditOk" onclick="CmdProductPackageEditOk_OnClick()">
                    Ok
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="CmdProductPackageEditCancel">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@*Loading*@
<div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true">
    <div class="modal-dialog" style="width: 220px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <img src="/img/progress_bar.gif" />
            </div>
        </div>
    </div>
</div>

@*Module*@
<script type="text/javascript">
    var ProductPackages;

    var ProductPackageGrid;

    var ddl;
    var ProductList;

    var btnFirstPageProductPackage;
    var btnPreviousPageProductPackage;
    var btnNextPageProductPackage;
    var btnLastPageProductPackage;
    var btnCurrentPageProductPackage;

    function CmdProductPackageEdit_OnClick() {
        ProductPackages.editItem(ProductPackages.currentItem);

        $('#ProductPackageEdit').modal('show');

        var ProductPackage = ProductPackages.currentEditItem;
        document.getElementById('ProductPackageEdit_Id').value = ProductPackage.Id !== null && typeof (ProductPackage.Id) != 'undefined' ? wijmo.Globalize.format(ProductPackage.Id) : '';
        document.getElementById('ProductPackageEdit_ProductPackageDescription').value = ProductPackage.ProductPackageDescription ? ProductPackage.ProductPackageDescription : '';
        document.getElementById('ProductPackageEdit_SKU').value = ProductPackage.SKU ? ProductPackage.SKU : '';
        document.getElementById('ProductPackageEdit_Price').value = ProductPackage.Price ? ProductPackage.Price : '';
        document.getElementById('ProductPackageEdit_IsAvailable').checked = ProductPackage.IsAvailable;
        document.getElementById('ProductPackageEdit_WithCoupon').checked = ProductPackage.WithCoupon;
        document.getElementById('ProductPackageEdit_WithSoftware').checked = ProductPackage.WithSoftware;
        document.getElementById('ProductPackageEdit_IsReoccuring').checked = ProductPackage.IsReoccuring;
        document.getElementById('ProductPackageEdit_Particulars').value = ProductPackage.Particulars ? ProductPackage.Particulars : '';


        ddl.dispose();
        ddl = new wijmo.input.AutoComplete('#cboProductPackageEdit_ProductId', {
            itemsSource: getProductsList(ProductList.items),
            selectedValue: ProductPackage.Product,
            onSelectedIndexChanged: function () {
                $("#ProductPackageEdit_ProductId").val(ProductList.items[this.selectedIndex].Id);
            }
        });

    }
    function CmdProductPackageAdd_OnClick() {
        $('#ProductPackageEdit').modal('show');

        document.getElementById('ProductPackageEdit_Id').value = 0;
        document.getElementById('ProductPackageEdit_ProductPackageDescription').value = '';
        document.getElementById('ProductPackageEdit_ProductId').value = ProductList.items[0].Id;
        document.getElementById('ProductPackageEdit_SKU').value = '';
        document.getElementById('ProductPackageEdit_Price').value = '';
        document.getElementById('ProductPackageEdit_IsAvailable').checked = false;
        document.getElementById('ProductPackageEdit_WithCoupon').checked = false;
        document.getElementById('ProductPackageEdit_WithSoftware').checked = false;
        document.getElementById('ProductPackageEdit_IsReoccuring').checked = false;
        document.getElementById('ProductPackageEdit_Particulars').value = '';

        ddl.dispose();
        ddl = new wijmo.input.AutoComplete('#cboProductPackageEdit_ProductId', {
            itemsSource: getProductsList(ProductList.items),
            placeholder: 'Select Product ',
            onSelectedIndexChanged: function () {
                $("#ProductPackageEdit_ProductId").val(ProductList.items[this.selectedIndex].Id);
            }
        });
    }
    function CmdProductPackageDelete_OnClick() {
        ProductPackages.editItem(ProductPackages.currentItem);

        var Id = ProductPackages.currentEditItem.Id;
        var ProductPackageDescription = ProductPackages.currentEditItem.ProductPackageDescription;

        if (confirm("Delete " + ProductPackageDescription + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteProductPackage/" + Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        window.location.reload();
                    },
                    404: function () {
                        alert("Not found");
                    },
                    400: function () {
                        alert("Bad request");
                    }
                }
            });
        }
    }
    function CmdProductPackageEditOk_OnClick() {
        if (confirm("Save Product Package?") == true) {

            var ProductPackage = new Object();

            ProductPackage.Id = document.getElementById('ProductPackageEdit_Id').value;
            ProductPackage.ProductPackageDescription = document.getElementById('ProductPackageEdit_ProductPackageDescription').value;
            ProductPackage.SKU = document.getElementById('ProductPackageEdit_SKU').value;
            ProductPackage.Price = document.getElementById('ProductPackageEdit_Price').value;
            ProductPackage.ProductId = document.getElementById('ProductPackageEdit_ProductId').value;
            ProductPackage.IsAvailable = document.getElementById('ProductPackageEdit_IsAvailable').checked;
            ProductPackage.WithCoupon = document.getElementById('ProductPackageEdit_WithCoupon').checked;
            ProductPackage.WithSoftware = document.getElementById('ProductPackageEdit_WithSoftware').checked;
            ProductPackage.IsReoccuring = document.getElementById('ProductPackageEdit_IsReoccuring').checked;
            ProductPackage.Particulars = document.getElementById('ProductPackageEdit_Particulars').value;


            var data = JSON.stringify(ProductPackage);

            // Add New
            if (ProductPackage.Id == 0) {
                $.ajax({
                    type: "POST",
                    url: "/api/AddProductPackage",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    success: function (id) {
                        if (id > 0) {
                            window.location.reload();
                        } else {
                            alert("Not added");
                        }
                    }
                });

                // Edit
            } else {
                $.ajax({
                    type: "PUT",
                    url: "/api/UpdateProductPackage/" + ProductPackage.Id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            window.location.reload();
                        },
                        404: function () {
                            alert("Not found");
                        },
                        400: function () {
                            alert("Bad request");
                        }
                    }
                });
            }
        }
    }

    function getProductsList(items) {
        var retList = new Array();

        for (var i = 0; i < items.length; i++) {
            retList.push(items[i].ProductDescription);
        }

        return retList;
    }
    function getProducts() {
        var products = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Product',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        products.push({
                            Id: Results[i]["Id"],
                            ProductDescription: Results[i]["ProductDescription"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return products;
    }
    function GetProductPackages() {
        var productPackages = new wijmo.collections.ObservableArray();
        $('#loading').modal('show');
        $.ajax({
            url: '/api/ProductPackage',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                $('#loading').modal('hide');
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        productPackages.push({
                            EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditProductPackage' onclick='CmdProductPackageEdit_OnClick()'>Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteProductPackage' onclick='CmdProductPackageDelete_OnClick()'>Delete</button>",
                            Id: Results[i]["Id"],
                            ProductPackageDescription: Results[i]["ProductPackageDescription"],
                            SKU: Results[i]["SKU"],
                            Price: Results[i]["Price"],
                            ProductId: Results[i]["ProductId"],
                            Product: Results[i]["Product"],
                            IsAvailable: Results[i]["IsAvailable"],
                            WithCoupon: Results[i]["WithCoupon"],
                            WithSoftware: Results[i]["WithSoftware"],
                            IsReoccuring: Results[i]["IsReoccuring"],
                            Particulars: Results[i]["Particulars"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return productPackages;
    }

    function UpdateNavigateButtonsProductPackage() {
        if (ProductPackages.pageSize <= 0) {
            document.getElementById('naviagtionPageProductPackage').style.display = 'none';
            return;
        }
        document.getElementById('naviagtionPageProductPackage').style.display = 'block';
        if (ProductPackages.pageIndex === 0) {
            btnFirstPageProductPackage.setAttribute('disabled', 'disabled');
            btnPreviousPageProductPackage.setAttribute('disabled', 'disabled');
            btnNextPageProductPackage.removeAttribute('disabled');
            btnLastPageProductPackage.removeAttribute('disabled');
        }
        else if (ProductPackages.pageIndex === (ProductPackages.pageCount - 1)) {
            btnFirstPageProductPackage.removeAttribute('disabled');
            btnPreviousPageProductPackage.removeAttribute('disabled');
            btnLastPageProductPackage.setAttribute('disabled', 'disabled');
            btnNextPageProductPackage.setAttribute('disabled', 'disabled');
        }
        else {
            btnFirstPageProductPackage.removeAttribute('disabled');
            btnPreviousPageProductPackage.removeAttribute('disabled');
            btnNextPageProductPackage.removeAttribute('disabled');
            btnLastPageProductPackage.removeAttribute('disabled');
        }
        btnCurrentPageProductPackage.innerHTML = (ProductPackages.pageIndex + 1) + ' / ' + ProductPackages.pageCount;
    }

    $(document).ready(function () {
        btnFirstPageProductPackage = document.getElementById('btnMoveToFirstPageProductPackage');
        btnPreviousPageProductPackage = document.getElementById('btnMoveToPreviousPageProductPackage');
        btnNextPageProductPackage = document.getElementById('btnMoveToNextPageProductPackage');
        btnLastPageProductPackage = document.getElementById('btnMoveToLastPageProductPackage');
        btnCurrentPageProductPackage = document.getElementById('btnCurrentPageProductPackage');

        ProductPackages = new wijmo.collections.CollectionView(GetProductPackages());

        ProductPackageGrid = new wijmo.grid.FlexGrid('#ProductPackageGrid');

        ProductList = new wijmo.collections.CollectionView(getProducts());

        ProductPackageGrid.initialize({
            columns: [
                        {
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Product Package Description",
                            "binding": "ProductPackageDescription",
                            "allowSorting": false,
                            "width": 100
                        },
                        {
                            "header": "SKU",
                            "binding": "SKU",
                            "allowSorting": false,
                            "width": "2*"
                        },
                        {
                            "header": "Price",
                            "binding": "Price",
                            "allowSorting": false,
                            "width": "2*"
                        },
                        {
                            "header": "Product",
                            "binding": "Product",
                            "allowSorting": false,
                            "width": "4*"
                        },
                        {
                            "header": "Particulars",
                            "binding": "Particulars",
                            "allowSorting": false,
                            "width": "4*"
                        }
            ],
            autoGenerateColumns: false,
            itemsSource: ProductPackages,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        ProductPackageGrid.trackChanges = true;

        ProductPackages.pageSize = 15;

        ddl = new wijmo.input.AutoComplete('#cboProductPackageEdit_ProductId', {
            itemsSource: getProductsList(ProductList.items),
            placeholder: 'Select Product ',
            onSelectedIndexChanged: function () {
                $("#ProductPackageEdit_ProductId").val(ProductList.items[this.selectedIndex].Id);
            }
        });

        UpdateNavigateButtonsProductPackage();

        // Page Button ProductPackages
        btnFirstPageProductPackage.addEventListener('click', function () {
            ProductPackages.moveToFirstPage();
            UpdateNavigateButtonsProductPackage();
        });
        btnPreviousPageProductPackage.addEventListener('click', function () {
            ProductPackages.moveToPreviousPage();
            UpdateNavigateButtonsProductPackage();
        });
        btnNextPageProductPackage.addEventListener('click', function () {
            ProductPackages.moveToNextPage();
            UpdateNavigateButtonsProductPackage();
        });
        btnLastPageProductPackage.addEventListener('click', function () {
            ProductPackages.moveToLastPage();
            UpdateNavigateButtonsProductPackage();
        });

    });
</script>