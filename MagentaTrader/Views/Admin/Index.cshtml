<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />
<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/knockout-3.2.0.js"></script>
<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>

<!--Theme-->
<link href="http://cdn.wijmo.com/themes/aristo/jquery-wijmo.css" rel="stylesheet" type="text/css" />

<!--Wijmo Widgets CSS-->
<link href="http://cdn.wijmo.com/jquery.wijmo-pro.all.3.20143.59.min.css" rel="stylesheet" type="text/css" />

<!--RequireJs-->
<script type="text/javascript" src="http://cdn.wijmo.com/external/require.js"></script>

<!--NAV-->
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container topnav">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"> - Admin v.Beta.1.20150130</span></a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <a href="#users" id="TabUsers" class="alink" onclick="ShowUsers()">Users</a>
                </li>
                <li>
                    <a href="#events" id="TabEvents" class="alink" onclick="ShowEvents()">Events</a>
                </li>
                <li>
                    <a href="#">Products</a>
                </li>
                <li>
                    <a href="#sales" id="TabSales" class="alink" onclick="ShowSales()">Sales</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!--USER-->
<div id="DivUsers">
    <a name="users"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">

                <div class="clearfix"></div>
                <h2 class="section-heading">Users</h2>
                <div id="UserGrid" class="grid" onclick="UserShow();"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#UsersDetail" id="btnEditUsers">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#UsersDetailAdd" id="btnAddUsers">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteUsers">
                        Delete
                    </button>
                </div>

                <div class="row-fluid well row">
                    <div class="col-md-5">
                        <input id="pagingInput" type="text" class="form-control" placeholder="0 or empty is for no paging." />
                    </div>
                    <div class="btn-group col-md-7" id="naviagtionPage">
                        <button type="button" class="btn btn-default" id="btnMoveToFirstPage">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToPreviousPage">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPage"></button>
                        <button type="button" class="btn btn-default" id="btnMoveToNextPage">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToLastPage">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="UsersDetail">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Edit User Information</h4>
            </div>
            <form id="formUsers">
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>ID</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_Id" type="text" readonly="true" />
                        </dd>
                        <dt>User Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_UserName" type="text" />
                        </dd>
                        <dt>First Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_FirstName" type="text" />
                        </dd>
                        <dt>Last Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_LastName" type="text" />
                        </dd>
                        <dt>Email Address</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_EmailAddress" type="text" />
                        </dd>
                        <dt>Phone Number</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_PhoneNumber" type="text" />
                        </dd>
                    </dl>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditUser" onclick="EditUsers()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditUser" onclick="CancelEditUsers()">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div id="DivUsersDetailAdd">
    <div class="modal fade" id="UsersDetailAdd">
        <div class="modal-dialog" id="DivUsersDetailAdd2">
            <div class="modal-content" id="DivUsersDetailAdd3">
                <div class="modal-header" id="DivUsersDetailAdd4">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">User Detail</h4>
                </div>
                <form id="formUsers">
                    <div class="modal-body" id="DivUsersDetailAdd5">
                        <dl class="dl-horizontal">
                            <dt>User Name</dt>
                            <dd>
                                <input class="form-control" id="UserAdd_UserName" type="text" />
                            </dd>
                            <dt>First Name</dt>
                            <dd>
                                <input class="form-control" id="UserAdd_FirstName" type="text" />
                            </dd>
                            <dt>Last Name</dt>
                            <dd>
                                <input class="form-control" id="UserAdd_LastName" type="text" />
                            </dd>
                            <dt>Email Address</dt>
                            <dd>
                                <input class="form-control" id="UserAdd_EmailAddress" type="text" />
                            </dd>
                            <dt>Phone Number</dt>
                            <dd>
                                <input class="form-control" id="UserAdd_PhoneNumber" type="text" />
                            </dd>
                        </dl>
                    </div>
                </form>
                <div class="modal-footer" id="DivUsersDetailAdd6">
                    <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddUser" onclick="InsertUsers()">
                        OK
                    </button>
                    <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddUser" onclick="CancelAddUsers()">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--EVENTS-->

<div id="DivEvents">
    <a name="events"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">
                <div class="clearfix"></div>
                <h2 class="section-heading">Events</h2>
                <div id="EventGrid" class="grid" onclick="EventShow();"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#EventDetailEdit" id="btnEditEvent">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#EventDetailAdd" id="btnAddEvent">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteEvent">
                        Delete
                    </button>
                </div>
                <div class="row-fluid well row">
                    <div class="col-md-5">
                        <input id="pagingInputEvent" type="text" class="form-control" placeholder="0 or empty is for no paging." />
                    </div>
                    <div class="btn-group col-md-7" id="naviagtionPageEvent">
                        <button type="button" class="btn btn-default" id="btnMoveToFirstPageEvent">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToPreviousPageEvent">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageEvent"></button>
                        <button type="button" class="btn btn-default" id="btnMoveToNextPageEvent">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToLastPageEvent">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="EventDetailAdd">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Event Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Date</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_EventDate" type="text" />
                        <div class="form-control" id="calendarAddEvent"></div>
                    </dd>
                    <dt>Event</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_EventDescription" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_Particulars" type="text" />
                    </dd>
                    <dt>URL</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_URL" type="text" />
                    </dd>
                    <dt>Video URL</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_VideoURL" type="text" />
                    </dd>
                    <dt>Type</dt>
                    <dd>
                        <select class="form-control" id="EventAdd_EventType">
                            <option value="WEBINAR">WEBINAR</option>
                            <option value="USER">USER</option>
                            <option value="WEB99">WEB99</option>
                            <option value="REALTIMEBETA">REALTIMEBETA</option>
                            <option value="WORKSHOP">WORKSHOP</option>
                            <option value="OTHER">OTHER</option>
                        </select>
                    </dd>
                    <dt>Resticted</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_IsRestricted" type="checkbox" />
                    </dd>
                    <dt>Archived</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_IsArchived" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddEvent" onclick="InsertEvents()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddEvent">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="EventDetailEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Edit Event Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>ID</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Id" type="text" readonly="true" />
                    </dd>
                    <dt>Date</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventDate" type="text" name="EventEdit_EventDate" />
                        <div class="form-control" id="calendarEditEvent"></div>
                    </dd>
                    <dt>Event</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventDescription" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Particulars" type="text" />
                    </dd>
                    <dt>URL</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_URL" type="text" />
                    </dd>
                    <dt>Video URL</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_VideoURL" type="text" />
                    </dd>
                    <dt>Type</dt>
                    <dd>
                        <!-- <input class="form-control" id="EventEdit_EventType" type="text" /> -->
                        <select class="form-control" id="EventEdit_EventType">
                            <option value="WEBINAR">WEBINAR</option>
                            <option value="USER">USER</option>
                            <option value="WEB99">WEB99</option>
                            <option value="REALTIMEBETA">REALTIMEBETA</option>
                            <option value="WORKSHOP">WORKSHOP</option>
                            <option value="OTHER">OTHER</option>
                        </select>
                    </dd>
                    <dt>Resticted</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsRestricted" type="checkbox" />
                    </dd>
                    <dt>Archived</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsArchived" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditEvent" onclick="EditEvents()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditEvent">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>


<!--SALES-->

<div id="DivSales">
    <a name="users"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">
                <div class="clearfix"></div>
                <h2 class="section-heading">Sales</h2>
                <div id="SalesGrid" class="grid" onclick="SaleShow();"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#SaleDetailEdit" id="btnEditSales">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#SaleDetailAdd" id="btnAddSales">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteSales">
                        Delete
                    </button>
                </div>
                <div class="row-fluid well row">
                    <div class="col-md-5">
                        <input id="pagingInputSale" type="text" class="form-control" placeholder="0 or empty is for no paging." />
                    </div>
                    <div class="btn-group col-md-7" id="naviagtionPageSale">
                        <button type="button" class="btn btn-default" id="btnMoveToFirstPageSale">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToPreviousPageSale">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageSale"></button>
                        <button type="button" class="btn btn-default" id="btnMoveToNextPageSale">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToLastPageSale">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SaleDetailAdd">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Sales Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Product Package</dt>
                    <dd>
                        <div id="cboSaleAdd_ProductPackageId"></div>
                        <input class="form-control" id="SaleAdd_ProductPackageId" type="hidden" readonly="true" value="2" />

                    </dd>
                    <dt>User Name</dt>
                    <dd>
                        <div id="cboSaleAdd_UserId"></div>
                        <input class="form-control" id="SaleAdd_UserId" type="hidden" readonly="true" value="1" />
                    </dd>
                    <dt>Sales Number</dt>
                    <dd>

                        <input class="form-control" id="SaleAdd_SalesNumber" type="text" />
                    </dd>
                    <dt>Sales Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_SalesDate" type="text" />
                        <div class="form-control" id="calendarSaleAdd_SalesDate"></div>
                    </dd>
                    <dt>Renewal Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_RenewalDate" type="text" />
                        <div class="form-control" id="calendarSaleAdd_RenewalDate"></div>
                    </dd>
                    <dt>Expiry Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_ExpiryDate" type="text" />
                        <div class="form-control" id="calendarSaleAdd_ExpiryDate"></div>
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Particulars" type="text" />
                    </dd>
                    <dt>Quantity</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Quantity" type="text" />
                    </dd>
                    <dt>Price</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Price" type="text" />
                    </dd>
                    <dt>Amount</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Amount" type="text" />
                    </dd>
                    <dt>Active</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_IsActive" type="checkbox" />
                    </dd>
                    <dt>Refunded</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_IsRefunded" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddSales" onclick="InsertSales()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddSales">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="SaleDetailEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Sales Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>ID</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Id" type="text" readonly="true" />
                    </dd>
                    <dt>Product Package</dt>
                    <dd>
                        <!-- <select class="form-control" id="SaleEdit_ProductPackageId">
                                </select> -->
                        <!--<input class="form-control" id="SaleEdit_ProductPackageId" type="text" readonly="true" value="2" />-->
                        <input class="form-control" id="SaleEdit_ProductPackageId_Info" type="text" readonly="true" />
                        <input class="form-control" id="SaleEdit_ProductPackageId" type="hidden" readonly="true" />

                    </dd>
                    <dt>User Name</dt>
                    <dd>
                        <!--<input class="form-control" id="SaleEdit_UserId" type="text" readonly="true" value="1" />-->
                        <input class="form-control" id="SaleEdit_UserId_Info" type="text" readonly="true" />
                        <input class="form-control" id="SaleEdit_UserId" type="hidden" readonly="true" />
                    </dd>
                    <dt>Sales Number</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_SalesNumber" type="text" />
                    </dd>
                    <dt>Sales Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_SalesDate" type="text" />
                        <div class="form-control" id="calendarSaleEdit_SalesDate"></div>
                    </dd>
                    <dt>Renewal Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_RenewalDate" type="text" />
                        <div class="form-control" id="calendarSaleEdit_RenewalDate"></div>
                    </dd>
                    <dt>Expiry Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_ExpiryDate" type="text" />
                        <div class="form-control" id="calendarSaleEdit_ExpiryDate"></div>
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Particulars" type="text" />
                    </dd>
                    <dt>Quantity</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Quantity" type="text" />
                    </dd>
                    <dt>Price</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Price" type="text" />
                    </dd>
                    <dt>Amount</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Amount" type="text" />
                    </dd>
                    <dt>Active</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_IsActive" type="checkbox" />
                    </dd>
                    <dt>Refunded</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_IsRefunded" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditSales" onclick="EditSales()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditSales">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!--JAVASCRIPT-->>
<script id="scriptInit" type="text/javascript">

    require(["wijmo.wijcalendar"], function () {
        /*EVENTS*/
        $(function () {
            $("#calendarAddEvent").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#EventAdd_EventDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#EventAdd_EventDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarAddEvent").wijcalendar("popup", {
                    of: $("#EventAdd_EventDate")
                });
            });

            $("#calendarEditEvent").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#EventEdit_EventDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#EventEdit_EventDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarEditEvent").wijcalendar("popup", {
                    of: $("#EventEdit_EventDate")
                });
            });

            /*SALES*/
            $("#calendarSaleAdd_SalesDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleAdd_SalesDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleAdd_SalesDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleAdd_SalesDate").wijcalendar("popup", {
                    of: $("#SaleAdd_SalesDate")
                });
            });

            $("#calendarSaleAdd_RenewalDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleAdd_RenewalDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleAdd_RenewalDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleAdd_RenewalDate").wijcalendar("popup", {
                    of: $("#SaleAdd_RenewalDate")
                });
            });


            $("#calendarSaleAdd_ExpiryDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleAdd_ExpiryDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleAdd_ExpiryDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleAdd_ExpiryDate").wijcalendar("popup", {
                    of: $("#SaleAdd_ExpiryDate")
                });
            });


            $("#calendarSaleEdit_SalesDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleEdit_SalesDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleEdit_SalesDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleEdit_SalesDate").wijcalendar("popup", {
                    of: $("#SaleEdit_SalesDate")
                });
            });


            $("#calendarSaleEdit_RenewalDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleEdit_RenewalDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleEdit_RenewalDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleEdit_RenewalDate").wijcalendar("popup", {
                    of: $("#SaleEdit_RenewalDate")
                });
            });


            $("#calendarSaleEdit_ExpiryDate").wijcalendar({
                //set the calendar is a pop-up calendar.
                popupMode: true,
                selectedDatesChanged: function () {
                    var selDate = $(this).wijcalendar("getSelectedDate");
                    var selectDate = new Date(selDate);
                    if (!!selDate) $("#SaleEdit_ExpiryDate").val(selectDate.getMonth() + 1 + "/" + selectDate.getDate() + "/" + selectDate.getFullYear());
                }
            });

            $("#SaleEdit_ExpiryDate").click(function () {
                //Pops up the calendar at specifies position.
                $("#calendarSaleEdit_ExpiryDate").wijcalendar("popup", {
                    of: $("#SaleEdit_ExpiryDate")
                });
            });



        });
    });

    require(["wijmo.wijcombobox"], function () {
        $(document).ready(function () {

            var ac = new wijmo.input.AutoComplete('#cboSaleAdd_UserId', {
                itemsSource: getUsersList(UserList.items),
                placeholder: 'Select User ',
                onSelectedIndexChanged: function (e, data) {

                    $("#SaleAdd_UserId").val(UserList.items[this.selectedIndex].Id);
                }
            });

            var ax = new wijmo.input.AutoComplete('#cboSaleAdd_ProductPackageId', {
                itemsSource: getProductPackageList(ProductPackageList.items),
                placeholder: 'Select Product Package ',
                onSelectedIndexChanged: function (e, data) {

                    $("#SaleAdd_ProductPackageId").val(ProductPackageList.items[this.selectedIndex].Id);
                }
            });

            //$("#cboSaleAdd_UserId").wijgrid({

            //    selectionChanged: function () {
            //        alert("changed!!!");
            //    }
            //});
            // put all your jQuery goodness in here.

            //   $("#EventAdd_EventType").wijcombobox(
            //  {
            //      showingAnimation: { effect: "blind" },
            //     hidingAnimation: { effect: "blind" }
            // });

            // $("#EventEdit_EventType").wijcombobox(
            //  {
            //      showingAnimation: { effect: "blind" },
            //      hidingAnimation: { effect: "blind" }
            //  });

        });
    });

    require(["wijmo.wijgrid"], function () {
        $(document).ready(function () {

            $("#UserGrid").wijgrid({ selectionChanged: function (e, args) { $("#btnEditUsers").hide(); } });

            //$("#UserGrid").wijgrid("ensureControl", true); // refresh wijgrid

            // $("#EventGrid").wijgrid("ensureControl", true); // refresh wijgrid

            // $("#SalesGrid").wijgrid("ensureControl", true); // refresh wijgrid
        });
    });

</script>


<script type="text/javascript">

    requirejs.config({
        baseUrl: "http://cdn.wijmo.com/amd-js/3.20143.59",
        paths: {
            "jquery": "jquery-1.11.1.min",
            "jquery-ui": "jquery-ui-1.11.0.custom.min",
            "jquery.ui": "jquery-ui",
            "jquery.mousewheel": "jquery.mousewheel.min",
            "globalize": "globalize.min"
        }
    });


    var Users;
    var UserGrid;
    var UserList;

    var Events;
    var EventGrid;

    var Sales;
    var SalesGrid;

    var SelectedIndex;
    var ProductPackageList;


    $(document).ready(function () {

        /*USER*/
        $("#btnEditUsers").hide();
        $("#btnDeleteUsers").hide();

        $("#btnEditEvent").hide();
        $("#btnDeleteEvent").hide();

        $("#btnEditSales").hide();
        $("#btnDeleteSales").hide();





        UserList = new wijmo.collections.CollectionView(getUsers());
        Users = new wijmo.collections.CollectionView(getUsers());
        UserGrid = new wijmo.grid.FlexGrid('#UserGrid'),
               btnFirstPage = document.getElementById('btnMoveToFirstPage'),
               btnPreviousPage = document.getElementById('btnMoveToPreviousPage'),
               btnNextPage = document.getElementById('btnMoveToNextPage'),
               btnLastPage = document.getElementById('btnMoveToLastPage'),
               btnCurrentPage = document.getElementById('btnCurrentPage');

        UserGrid.initialize({
            itemsSource: Users,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row

        });

        UserGrid.trackChanges = true;
        Users.pageSize = 10;

        document.getElementById('pagingInput').value = Users.pageSize;
        // init the button status.
        updateNaviagteButtons();
        // update the collectionview's pagesize according to the user's input.
        document.getElementById('pagingInput').addEventListener('blur',
            function () {
                var pagesize = this.value;
                if (!pagesize) { pagesize = 0; }
                else { pagesize = wijmo.Globalize.parseInt(pagesize); }
                Users.pageSize = pagesize; updateNaviagteButtons();
            });
        // update the navigation buttons' status
        function updateNaviagteButtons() {
            if (Users.pageSize <= 0) {
                document.getElementById('naviagtionPage').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPage').style.display = 'block';
            if (Users.pageIndex === 0) {
                btnFirstPage.setAttribute('disabled', 'disabled');
                btnPreviousPage.setAttribute('disabled', 'disabled');
                btnNextPage.removeAttribute('disabled');
                btnLastPage.removeAttribute('disabled');
            }
            else if (Users.pageIndex === (Users.pageCount - 1)) {
                btnFirstPage.removeAttribute('disabled');
                btnPreviousPage.removeAttribute('disabled');
                btnLastPage.setAttribute('disabled', 'disabled');
                btnNextPage.setAttribute('disabled', 'disabled');
            }
            else {
                btnFirstPage.removeAttribute('disabled');
                btnPreviousPage.removeAttribute('disabled');
                btnNextPage.removeAttribute('disabled');
                btnLastPage.removeAttribute('disabled');
            }

            btnCurrentPage.innerHTML = (Users.pageIndex + 1) + ' / ' + Users.pageCount;
        }
        // commands: moving page.
        btnFirstPage.addEventListener('click', function () {
            // move to the first page.
            Users.moveToFirstPage();
            updateNaviagteButtons();
        });

        btnPreviousPage.addEventListener('click', function () {
            // move to the previous page.
            Users.moveToPreviousPage();
            updateNaviagteButtons();
        });

        btnNextPage.addEventListener('click', function () {
            // move to the next page.
            Users.moveToNextPage(); updateNaviagteButtons();
        }); btnLastPage.addEventListener('click', function () {
            // move to the last page.
            Users.moveToLastPage(); updateNaviagteButtons();
        });

        document.getElementById('btnEditUsers').addEventListener('click', function () {
            Users.editItem(Users.currentItem);
            UpdateDialogUser(Users.currentEditItem);
        });
        document.getElementById('btnDeleteUsers').addEventListener('click', function () {
            var r = confirm("Delete User?");
            if (r == true) {
                Users.editItem(Users.currentItem);
                getID(Users.currentEditItem);
            }
        });

        /*EVENTS*/
        Events = new wijmo.collections.CollectionView(getEvents());
        EventGrid = new wijmo.grid.FlexGrid('#EventGrid'),
                 btnFirstPageEvent = document.getElementById('btnMoveToFirstPageEvent'),
                 btnPreviousPageEvent = document.getElementById('btnMoveToPreviousPageEvent'),
                 btnNextPageEvent = document.getElementById('btnMoveToNextPageEvent'),
                 btnLastPageEvent = document.getElementById('btnMoveToLastPageEvent'),
                 btnCurrentPageEvent = document.getElementById('btnCurrentPageEvent');

        EventGrid.initialize({
            itemsSource: Events,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        EventGrid.trackChanges = true;

        Events.pageSize = 10;

        document.getElementById('pagingInputEvent').value = Events.pageSize;
        // init the button status.
        updateNaviagteButtonsEvent();
        // update the collectionview's pagesize according to the user's input.
        document.getElementById('pagingInputEvent').addEventListener('blur',
            function () {
                var pagesize = this.value;
                if (!pagesize) { pagesize = 0; }
                else { pagesize = wijmo.Globalize.parseInt(pagesize); }
                Events.pageSize = pagesize; updateNaviagteButtonsEvent();
            });
        // update the navigation buttons' status
        function updateNaviagteButtonsEvent() {
            if (Events.pageSize <= 0) {
                document.getElementById('naviagtionPageEvent').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageEvent').style.display = 'block';
            if (Events.pageIndex === 0) {
                btnFirstPageEvent.setAttribute('disabled', 'disabled');
                btnPreviousPageEvent.setAttribute('disabled', 'disabled');
                btnNextPageEvent.removeAttribute('disabled');
                btnLastPageEvent.removeAttribute('disabled');
            }
            else if (Events.pageIndex === (Events.pageCount - 1)) {
                btnFirstPageEvent.removeAttribute('disabled');
                btnPreviousPageEvent.removeAttribute('disabled');
                btnLastPageEvent.setAttribute('disabled', 'disabled');
                btnNextPageEvent.setAttribute('disabled', 'disabled');
            }
            else {
                btnFirstPageEvent.removeAttribute('disabled');
                btnPreviousPageEvent.removeAttribute('disabled');
                btnNextPageEvent.removeAttribute('disabled');
                btnLastPageEvent.removeAttribute('disabled');
            }

            btnCurrentPageEvent.innerHTML = (Events.pageIndex + 1) + ' / ' + Events.pageCount;
        }
        // commands: moving page.
        btnFirstPageEvent.addEventListener('click', function () {
            // move to the first page.
            Events.moveToFirstPage();
            updateNaviagteButtonsEvent();
        });

        btnPreviousPageEvent.addEventListener('click', function () {
            // move to the previous page.
            Events.moveToPreviousPage();
            updateNaviagteButtonsEvent();
        });

        btnNextPageEvent.addEventListener('click', function () {
            // move to the next page.
            Events.moveToNextPage(); updateNaviagteButtonsEvent();
        }); btnLastPageEvent.addEventListener('click', function () {
            // move to the last page.
            Events.moveToLastPage(); updateNaviagteButtonsEvent();
        });


        document.getElementById('btnEditEvent').addEventListener('click', function () {
            Events.editItem(Events.currentItem);
            UpdateDialogEvents(Events.currentEditItem);
        });
        document.getElementById('btnDeleteEvent').addEventListener('click', function () {
            var r = confirm("Delete Event?");
            if (r == true) {
                Events.editItem(Events.currentItem);
                getIDEvents(Events.currentEditItem);
            }
        });



        /*SALES*/
        ProductPackageList = new wijmo.collections.CollectionView(getProductPackage());

        Sales = new wijmo.collections.CollectionView(getSales());
        SalesGrid = new wijmo.grid.FlexGrid('#SalesGrid')
        btnFirstPageSale = document.getElementById('btnMoveToFirstPageSale'),
        btnPreviousPageSale = document.getElementById('btnMoveToPreviousPageSale'),
        btnNextPageSale = document.getElementById('btnMoveToNextPageSale'),
        btnLastPageSale = document.getElementById('btnMoveToLastPageSale'),
        btnCurrentPageSale = document.getElementById('btnCurrentPageSale');

        SalesGrid.initialize({
            itemsSource: Sales,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        SalesGrid.trackChanges = true;

        Sales.pageSize = 10;

        document.getElementById('pagingInputSale').value = Sales.pageSize;
        // init the button status.
        updateNaviagteButtonsSale();
        // update the collectionview's pagesize according to the user's input.
        document.getElementById('pagingInputSale').addEventListener('blur',
            function () {
                var pagesize = this.value;
                if (!pagesize) { pagesize = 0; }
                else { pagesize = wijmo.Globalize.parseInt(pagesize); }
                Sales.pageSize = pagesize; updateNaviagteButtonsSale();
            });
        // update the navigation buttons' status
        function updateNaviagteButtonsSale() {
            if (Sales.pageSize <= 0) {
                document.getElementById('naviagtionPageSale').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageSale').style.display = 'block';
            if (Sales.pageIndex === 0) {
                btnFirstPageSale.setAttribute('disabled', 'disabled');
                btnPreviousPageSale.setAttribute('disabled', 'disabled');
                btnNextPageSale.removeAttribute('disabled');
                btnLastPageSale.removeAttribute('disabled');
            } else if (Sales.pageIndex === (Sales.pageCount - 1)) {
                btnFirstPageSale.removeAttribute('disabled');
                btnPreviousPageSale.removeAttribute('disabled');
                btnLastPageSale.setAttribute('disabled', 'disabled');
                btnNextPageSale.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageSale.removeAttribute('disabled');
                btnPreviousPageSale.removeAttribute('disabled');
                btnNextPageSale.removeAttribute('disabled');
                btnLastPageSale.removeAttribute('disabled');
            }

            btnCurrentPageSale.innerHTML = (Sales.pageIndex + 1) + ' / ' + Sales.pageCount;
        }

        // commands: moving page.
        btnFirstPageSale.addEventListener('click', function () {
            // move to the first page.
            Sales.moveToFirstPage();
            updateNaviagteButtonsSale();
        });

        btnPreviousPageSale.addEventListener('click', function () {
            // move to the previous page.
            Sales.moveToPreviousPage();
            updateNaviagteButtonsSale();
        });

        btnNextPageSale.addEventListener('click', function () {
            // move to the next page.
            Sales.moveToNextPage();
            updateNaviagteButtonsSale();
        });
        btnLastPageSale.addEventListener('click', function () {
            // move to the last page.
            Sales.moveToLastPage();
            updateNaviagteButtonsSale();
        });

        document.getElementById('btnAddSales').addEventListener('click', function () {
            // Sales.editItem(Sales.currentItem);
            // UpdateDialogSales(Sales.currentEditItem);
            //getProduct();
        });

        document.getElementById('btnEditSales').addEventListener('click', function () {
            Sales.editItem(Sales.currentItem);
            UpdateDialogSales(Sales.currentEditItem);
            //getProduct();
        });
        document.getElementById('btnDeleteSales').addEventListener('click', function () {
            var r = confirm("Delete Sales?");
            if (r == true) {
                Sales.editItem(Sales.currentItem);
                getIDSales(Sales.currentEditItem);
            }
        });

    });

    /*********************/
    function getUsersList(items) {
        var retList = new Array();

        for (var i = 0; i < items.length; i++) {
            retList.push(items[i].FirstName + " " + items[i].LastName);
        }

        return retList;
    }

    function getProductPackageList(items) {

        var retList = new Array();

        for (var i = 0; i < items.length; i++) {
            retList.push(items[i].ProductPackageDescription);
        }

        return retList;
    }
    /*********************/

    /*USER*/
    function ShowUsers() {
        document.getElementById('DivUsers').style.display = 'block';
        document.getElementById('DivEvents').style.display = 'none';
        document.getElementById('DivSales').style.display = 'none';
    }

    function getUsers() {
        var users = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/User',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        users.push({
                            Id: Results[i]["Id"],
                            UserName: Results[i]["UserName"],
                            FirstName: Results[i]["FirstName"],
                            LastName: Results[i]["LastName"],
                            EmailAddress: Results[i]["EmailAddress"],
                            PhoneNumber: Results[i]["PhoneNumber"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return users;
    }


    function InsertUsers() {

        var errorUser = ValidateUserAdd();

        if (errorUser == "") {
            var r = confirm("Insert User?");
            if (r == true) {

                //var users = new wijmo.collections.ObservableArray();
                var User = new Object();
                User.Id = 0;
                User.UserName = document.getElementById('UserAdd_UserName').value;
                User.FirstName = document.getElementById('UserAdd_FirstName').value;
                User.LastName = document.getElementById('UserAdd_LastName').value;
                User.EmailAddress = document.getElementById('UserAdd_EmailAddress').value;
                User.PhoneNumber = document.getElementById('UserAdd_PhoneNumber').value;

                var dataToPost = JSON.stringify(User);

                $.ajax({
                    type: "POST",
                    url: "/api/AddUser",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (response) {
                        alert("Success");
                        window.location.reload();
                    },
                    failure: function (response) {
                        alert("Error - " + response.d);
                    },
                    error: function (e) { }
                });
            }
        } else {
            $('#UsersDetailAdd').modal('hide');
            alert(errorUser);
            $('#UsersDetailAdd').modal('show');
        }
    }

    function UpdateDialogUser(User) {
        document.getElementById('UserEdit_Id').value = User.Id !== null && typeof (User.Id) != 'undefined' ? wijmo.Globalize.format(User.Id) : '';
        document.getElementById('UserEdit_UserName').value = User.UserName ? User.UserName : '';
        document.getElementById('UserEdit_FirstName').value = User.FirstName ? User.FirstName : '';
        document.getElementById('UserEdit_LastName').value = User.LastName ? User.LastName : '';
        document.getElementById('UserEdit_EmailAddress').value = User.EmailAddress ? User.EmailAddress : '';
        document.getElementById('UserEdit_PhoneNumber').value = User.PhoneNumber ? User.PhoneNumber : '';
    }

    function EditUsers() {
        var errorUser = ValidateUserEdit();
        if (errorUser == "") {
            var r = confirm("Update User?");
            if (r == true) {

                //var users = new wijmo.collections.ObservableArray();
                var User = new Object();
                User.Id = document.getElementById('UserEdit_Id').value;
                User.UserName = document.getElementById('UserEdit_UserName').value;
                User.FirstName = document.getElementById('UserEdit_FirstName').value;
                User.LastName = document.getElementById('UserEdit_LastName').value;
                User.EmailAddress = document.getElementById('UserEdit_EmailAddress').value;
                User.PhoneNumber = document.getElementById('UserEdit_PhoneNumber').value;

                var dataToPost = JSON.stringify(User);

                $.ajax({
                    type: "PUT",
                    url: "/api/UpdateUser/" + User.Id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (HttpResponseMessage) {
                        alert("Success");
                        window.location.reload();
                    },
                    failure: function (response) {
                        alert("Error - " + response.d);
                    },
                    error: function (e) { }
                });
                window.location.reload();
            }
        } else {
            $('#UsersDetail').modal('hide');
            alert(errorUser);
            $('#UsersDetail').modal('show');
        }
    }

    function getID(User) {
        DeleteUsers(User.Id);
    }

    function DeleteUsers(UserId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteUser/" + UserId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: UserId },
            success: function (HttpResponseMessage) {
                alert("Success");
                window.location.reload();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }

        });
        window.location.reload();
    }

    function ValidateUserAdd() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserAdd_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserAdd_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserAdd_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserAdd_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }

        return errortext;
    }

    function ValidateUserEdit() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserEdit_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserEdit_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserEdit_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserEdit_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }

        return errortext;
    }

    /*EVENTS*/
    function ShowEvents() {
        document.getElementById('DivUsers').style.display = 'none';
        document.getElementById('DivSales').style.display = 'none';
        document.getElementById('DivEvents').style.display = 'block';
    }

    function getEvents() {
        var events = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Event',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        events.push({
                            Id: Results[i]["Id"],
                            EventDate: Results[i]["EventDate"],
                            EventDescription: Results[i]["EventDescription"],
                            Particulars: Results[i]["Particulars"],
                            URL: Results[i]["URL"],
                            VideoURL: Results[i]["VideoURL"],
                            EventType: Results[i]["EventType"],
                            IsRestricted: Results[i]["IsRestricted"],
                            IsArchived: Results[i]["IsArchived"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return events;
    }

    function InsertEvents() {

        var r = confirm("Insert Event?");
        if (r == true) {

            var Event = new Object();
            Event.EventDate = document.getElementById('EventAdd_EventDate').value;
            Event.EventDescription = document.getElementById('EventAdd_EventDescription').value;
            Event.Particulars = document.getElementById('EventAdd_Particulars').value;
            Event.URL = document.getElementById('EventAdd_URL').value;
            Event.VideoURL = document.getElementById('EventAdd_VideoURL').value;
            Event.EventType = document.getElementById('EventAdd_EventType').value;
            Event.IsRestricted = document.getElementById('EventAdd_IsRestricted').checked;
            Event.IsArchived = document.getElementById('EventAdd_IsArchived').checked;

            var dataToPost = JSON.stringify(Event);

            $.ajax({
                type: "POST",
                url: "/api/AddEvent",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (response) {
                    alert("Success");
                    window.location.reload();
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });

        }
    }

    function UpdateDialogEvents(Event) {
        document.getElementById('EventEdit_Id').value = Event.Id !== null && typeof (Event.Id) != 'undefined' ? wijmo.Globalize.format(Event.Id) : '';
        document.getElementById('EventEdit_EventDate').value = Event.EventDate ? Event.EventDate : '';
        document.getElementById('EventEdit_EventDescription').value = Event.EventDescription ? Event.EventDescription : '';
        document.getElementById('EventEdit_Particulars').value = Event.Particulars ? Event.Particulars : '';
        document.getElementById('EventEdit_URL').value = Event.URL ? Event.URL : '';
        document.getElementById('EventEdit_VideoURL').value = Event.VideoURL ? Event.VideoURL : '';
        document.getElementById('EventEdit_EventType').value = Event.EventType ? Event.EventType : '';
        document.getElementById('EventEdit_IsRestricted').checked = Event.IsRestricted;
        document.getElementById('EventEdit_IsArchived').checked = Event.IsArchived;
    }

    function EditEvents() {
        //  var errorUser = ValidateUser();
        // if (errorUser == "") {
        var r = confirm("Update Event?");
        if (r == true) {

            //var users = new wijmo.collections.ObservableArray();
            var Event = new Object();
            Event.Id = document.getElementById('EventEdit_Id').value;
            Event.EventDate = document.getElementById('EventEdit_EventDate').value;
            Event.EventDescription = document.getElementById('EventEdit_EventDescription').value;
            Event.Particulars = document.getElementById('EventEdit_Particulars').value;
            Event.URL = document.getElementById('EventEdit_URL').value;
            Event.VideoURL = document.getElementById('EventEdit_VideoURL').value;
            Event.EventType = document.getElementById('EventEdit_EventType').value;
            Event.IsRestricted = document.getElementById('EventEdit_IsRestricted').checked;
            Event.IsArchived = document.getElementById('EventEdit_IsArchived').checked;

            var dataToPost = JSON.stringify(Event);
            $.ajax({
                type: "PUT",
                url: "/api/UpdateEvent/" + Event.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (response) {
                    alert("Success");
                    window.location.reload();
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });
            window.location.reload();
        }
        // } else {
        //     alert(errorUser);
        // }
    }

    function getIDEvents(Event) {
        DeleteEvents(Event.Id);
    }

    function DeleteEvents(EventId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteEvent/" + EventId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: EventId },
            success: function (response) {
                alert("Success");
                window.location.reload();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
    }

    /*function ValidateUser() {
                var errortext = "";
                //Firstname
                var fname = document.getElementById('UserAdd_FirstName').value;
                if (!(isNaN(fname))) {
                    errortext += "\n Invalid First name";
                }
                //Lastname
                var lname = document.getElementById('UserAdd_LastName').value;
                if (!(isNaN(lname))) {
                    errortext += "\n Invalid Last name";
                }
                //Email
                var email = document.getElementById('UserAdd_EmailAddress').value;
                var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                if (!filter.test(email)) {
                    errortext += "\n Invalid Email Address";
                }
                //Phone number
                var phone = document.getElementById('UserAdd_PhoneNumber').value;
                if (isNaN(phone)) {
                    errortext += "\n Invalid Phone number";
                }
                return errortext;
            }
            */

    /*SALES*/
    function ShowSales() {
        document.getElementById('DivUsers').style.display = 'none';
        document.getElementById('DivEvents').style.display = 'none';
        document.getElementById('DivSales').style.display = 'block';
    }

    function getSales() {
        var events = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Sales',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        events.push({
                            Id: Results[i]["Id"],
                            ProductPackageId: Results[i]["ProductPackageId"],
                            ProductPackage: Results[i]["ProductPackage"],
                            UserId: Results[i]["UserId"],
                            User: Results[i]["User"],
                            SalesNumber: Results[i]["SalesNumber"],
                            SalesDate: Results[i]["SalesDate"],
                            RenewalDate: Results[i]["RenewalDate"],
                            ExpiryDate: Results[i]["ExpiryDate"],
                            Particulars: Results[i]["Particulars"],
                            Quantity: Results[i]["Quantity"],
                            Price: Results[i]["Price"],
                            Amount: Results[i]["Amount"],
                            IsActive: Results[i]["IsActive"],
                            IsRefunded: Results[i]["IsRefunded"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return events;
    }

    function getProduct() {
        var product = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Product',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (data) {
                $('#ProductPackageDesc').html(data);
                //  if (Results.length > 0) {
                //      for (i = 0; i < Results.length; i++) {
                //          product.push({
                //              Id: Results[i]["Id"],
                //              ProductDescription: Results[i]["ProductDescription"]
                //          });
                //          FillComboWithData(product);
                //     }
                // } else {
                //    alert("No data.");
                // }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return product;
    }
    function getProductPackage() {
        var productPackage = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/ProductPackage',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        productPackage.push({
                            Id: Results[i]["Id"],
                            ProductPackageDescription: Results[i]["ProductPackageDescription"]
                        });
                    }
                } else {
                    // alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return productPackage;
    }
    function FillComboWithData(productArray) {
        var cmb_Product = $("#SaleEdit_ProductPackageId");
        //set the datasource of the combobobox
        cmb_Product.c1combobox({
            data: productArray
        });
    }

    function InsertSales() {

        var r = confirm("Insert Sale?");
        if (r == true) {

            var Sales = new Object();
            Sales.ProductPackageId = document.getElementById('SaleAdd_ProductPackageId').value;
            Sales.UserId = document.getElementById('SaleAdd_UserId').value;
            Sales.SalesNumber = document.getElementById('SaleAdd_SalesNumber').value;
            Sales.SalesDate = document.getElementById('SaleAdd_SalesDate').value;
            Sales.RenewalDate = document.getElementById('SaleAdd_RenewalDate').value;
            Sales.ExpiryDate = document.getElementById('SaleAdd_ExpiryDate').value;
            Sales.Particulars = document.getElementById('SaleAdd_Particulars').value;
            Sales.Quantity = document.getElementById('SaleAdd_Quantity').value;
            Sales.Price = document.getElementById('SaleAdd_Price').value;
            Sales.Amount = document.getElementById('SaleAdd_Amount').value;
            Sales.IsActive = document.getElementById('SaleAdd_IsActive').checked;
            Sales.IsRefunded = document.getElementById('SaleAdd_IsRefunded').checked;

            var dataToPost = JSON.stringify(Sales);

            $.ajax({
                type: "POST",
                url: "/api/AddSales",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (response) {
                    alert("Success");
                    window.location.reload();
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });

        }
    }

    function UpdateDialogSales(Sale) {
        document.getElementById('SaleEdit_Id').value = Sale.Id !== null && typeof (Sale.Id) != 'undefined' ? wijmo.Globalize.format(Sale.Id) : '';
        document.getElementById('SaleEdit_ProductPackageId').value = Sale.ProductPackageId ? Sale.ProductPackageId : '';
        document.getElementById('SaleEdit_UserId').value = Sale.UserId ? Sale.UserId : '';
        document.getElementById('SaleEdit_SalesNumber').value = Sale.SalesNumber ? Sale.SalesNumber : '';
        document.getElementById('SaleEdit_SalesDate').value = Sale.SalesDate ? Sale.SalesDate : '';
        document.getElementById('SaleEdit_RenewalDate').value = Sale.RenewalDate ? Sale.RenewalDate : '';
        document.getElementById('SaleEdit_ExpiryDate').value = Sale.ExpiryDate ? Sale.ExpiryDate : '';
        document.getElementById('SaleEdit_Particulars').value = Sale.Particulars ? Sale.Particulars : '';
        document.getElementById('SaleEdit_Quantity').value = Sale.Quantity ? Sale.Quantity : '';
        document.getElementById('SaleEdit_Price').value = Sale.Price ? Sale.Price : '';
        document.getElementById('SaleEdit_Amount').value = Sale.Amount ? Sale.Amount : '';
        document.getElementById('SaleEdit_IsActive').checked = Sale.IsActive;
        document.getElementById('SaleEdit_IsRefunded').checked = Sale.IsRefunded;
        // document.getElementById("SaleEdit_UserId_Info").value = getUsersInfo(document.getElementById('SaleEdit_UserId'));
        // document.getElementById("SaleEdit_ProductPackageId_Info").value = getProductPackageInfo(document.getElementById('SaleEdit_ProductPackageId'));
        document.getElementById("SaleEdit_UserId_Info").value = getUsersInfo(Sale.UserId);
        document.getElementById("SaleEdit_ProductPackageId_Info").value = getProductPackageInfo(Sale.ProductPackageId);



    }

    function EditSales() {
        // var errorUser = ValidateUser();
        // if (errorUser == "") {
        var r = confirm("Update Sales?");
        if (r == true) {
            //var users = new wijmo.collections.ObservableArray();
            var Sale = new Object();

            Sale.Id = document.getElementById('SaleEdit_Id').value;
            Sale.ProductPackageId = document.getElementById('SaleEdit_ProductPackageId').value;
            Sale.UserId = document.getElementById('SaleEdit_UserId').value;
            Sale.SalesNumber = document.getElementById('SaleEdit_SalesNumber').value;
            Sale.SalesDate = document.getElementById('SaleEdit_SalesDate').value;
            Sale.RenewalDate = document.getElementById('SaleEdit_RenewalDate').value;
            Sale.ExpiryDate = document.getElementById('SaleEdit_ExpiryDate').value;
            Sale.Particulars = document.getElementById('SaleEdit_Particulars').value;
            Sale.Quantity = document.getElementById('SaleEdit_Quantity').value;
            Sale.Price = document.getElementById('SaleEdit_Price').value;
            Sale.Amount = document.getElementById('SaleEdit_Amount').value;
            Sale.IsActive = document.getElementById('SaleEdit_IsActive').checked;
            Sale.IsRefunded = document.getElementById('SaleEdit_IsRefunded').checked;

            var dataToPost = JSON.stringify(Sale);

            $.ajax({
                type: "PUT",
                url: "/api/UpdateSales/" + Sale.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (response) {
                    alert("Success");
                    window.location.reload();
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });
            window.location.reload();
        }
        // } else {
        //     alert(errorUser);
        // }
    }

    function getIDSales(Sales) {
        DeleteSales(Sales.Id);
    }

    function DeleteSales(SaleId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteSales/" + SaleId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: SaleId },
            success: function (response) {
                alert("Success");
                window.location.reload();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
    }

    /*
            function ValidateUser() {
                var errortext = "";
                //Firstname
                var fname = document.getElementById('UserAdd_FirstName').value;
                if (!(isNaN(fname))) {
                    errortext += "\n Invalid First name";
                }
                //Lastname
                var lname = document.getElementById('UserAdd_LastName').value;
                if (!(isNaN(lname))) {
                    errortext += "\n Invalid Last name";
                }
                //Email
                var email = document.getElementById('UserAdd_EmailAddress').value;
                var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                if (!filter.test(email)) {
                    errortext += "\n Invalid Email Address";
                }
                //Phone number
                var phone = document.getElementById('UserAdd_PhoneNumber').value;
                if (isNaN(phone)) {
                    errortext += "\n Invalid Phone number";
                }
                return errortext;
            }
            */
    function getUsersInfo(id) {
        var retItem;

        for (var i = 0; i < UserList.items.length; i++) {
            if (UserList.items[i].Id == id)
                retItem = UserList.items[i].FirstName + " " + UserList.items[i].LastName;
        }
        return retItem;
    }

    function getProductPackageInfo(id) {
        var retItem;

        for (var i = 0; i < ProductPackageList.items.length; i++) {
            if (ProductPackageList.items[i].Id == id)
                retItem = ProductPackageList.items[i].ProductPackageDescription;
        }

        return retItem;
    }


    function UserShow() {
        $("#btnEditUsers").show();
        $("#btnDeleteUsers").show();
    }

    function EventShow() {
        $("#btnEditEvent").show();
        $("#btnDeleteEvent").show();
    }

    function SaleShow() {
        $("#btnEditSales").show();
        $("#btnDeleteSales").show();
    }

    function CancelAddUsers() {
        $('#UsersDetailAdd').modal('show');
        $('#UsersDetailAdd').modal('hide');
        document.getElementById('UserAdd_UserName').value = '';
        document.getElementById('UserAdd_FirstName').value = '';
        document.getElementById('UserAdd_LastName').value = '';
        document.getElementById('UserAdd_EmailAddress').value = '';
        document.getElementById('UserAdd_PhoneNumber').value = '';
    }

    function CancelEditUsers() {
        $('#UsersDetail').modal('show');
        $('#UsersDetail').modal('hide');
    }
</script>
<script src="/lib/jquery/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>
<!--<script src="/wijmo/controls/wijmo.min.js"></script>-->
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<!--<script src="/wijmo/controls/wijmo.grid.min.js"></script>-->
<script src="/wijmo/interop/knockout/wijmo.knockout.min.js"></script>
