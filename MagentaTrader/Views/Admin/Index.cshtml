<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />
<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/knockout-3.2.0.js"></script>
<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>

<!--NAV-->
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container topnav">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"> - Admin v.Beta.1.20150101</span></a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav navbar-right">
                <li>
                    <a href="#users" id="TabUsers" class="alink" onclick="ShowUsers()">Users</a>
                </li>
                <li>
                    <a href="#events" id="TabEvents" class="alink" onclick="ShowEvents()">Events</a>
                </li>
                <li>
                    <a href="#">Products</a>
                </li>
                <li>
                    <a href="#sales" id="TabSales" class="alink" onclick="ShowSales()">Purchases</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!--USER-->
<div id="DivUsers">
    <a name="users"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">

                <div class="clearfix"></div>
                <h2 class="section-heading">Users</h2>
                <div id="UserGrid"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#UsersDetail" id="btnEditUsers">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#UsersDetailAdd" id="btnAddUsers">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteUsers">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="UsersDetail">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Edit User Information</h4>
            </div>
            <form id="formUsers">
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>ID</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_Id" type="text" readonly="true" />
                        </dd>
                        <dt>User Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_UserName" type="text" />
                        </dd>
                        <dt>First Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_FirstName" type="text" />
                        </dd>
                        <dt>Last Name</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_LastName" type="text" />
                        </dd>
                        <dt>Email Address</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_EmailAddress" type="text" />
                        </dd>
                        <dt>Phone Number</dt>
                        <dd>
                            <input class="form-control" id="UserEdit_PhoneNumber" type="text" />
                        </dd>
                    </dl>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditUser" onclick="EditUsers()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditUser">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="UsersDetailAdd">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">User Detail</h4>
            </div>
            <form id="formUsers">
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>User Name</dt>
                        <dd>
                            <input class="form-control" id="UserAdd_UserName" type="text" />
                        </dd>
                        <dt>First Name</dt>
                        <dd>
                            <input class="form-control" id="UserAdd_FirstName" type="text" />
                        </dd>
                        <dt>Last Name</dt>
                        <dd>
                            <input class="form-control" id="UserAdd_LastName" type="text" />
                        </dd>
                        <dt>Email Address</dt>
                        <dd>
                            <input class="form-control" id="UserAdd_EmailAddress" type="text" />
                        </dd>
                        <dt>Phone Number</dt>
                        <dd>
                            <input class="form-control" id="UserAdd_PhoneNumber" type="text" />
                        </dd>
                    </dl>
                </div>
            </form>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddUser" onclick="InsertUsers()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddUser">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!--EVENTS-->

<div id="DivEvents">
    <a name="events"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">
                <div class="clearfix"></div>
                <h2 class="section-heading">Events</h2>
                <div id="EventGrid"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#EventDetailEdit" id="btnEditEvent">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#EventDetailAdd" id="btnAddEvent">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteEvent">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="EventDetailAdd">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Event Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Date</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_EventDate" type="text" />
                    </dd>
                    <dt>Event</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_EventDescription" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_Particulars" type="text" />
                    </dd>
                    <dt>URL</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_URL" type="text" />
                    </dd>
                    <dt>Type</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_EventType" type="text" />
                    </dd>
                    <dt>Resticted</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_IsRestricted" type="checkbox" />
                    </dd>
                    <dt>Archived</dt>
                    <dd>
                        <input class="form-control" id="EventAdd_IsArchived" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddEvent" onclick="InsertEvents()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddEvent">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="EventDetailEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Edit Event Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>ID</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Id" type="text" readonly="true" />
                    </dd>
                    <dt>Date</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventDate" type="text" />
                    </dd>
                    <dt>Event</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventDescription" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Particulars" type="text" />
                    </dd>
                    <dt>URL</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_URL" type="text" />
                    </dd>
                    <dt>Type</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventType" type="text" />
                    </dd>
                    <dt>Resticted</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsRestricted" type="checkbox" />
                    </dd>
                    <dt>Archived</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsArchived" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditEvent" onclick="EditEvents()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditEvent">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>


<!--SALES-->

<div id="DivSales">
    <a name="users"></a>
    <div class="content-section-a">
        <div class="container">
            <div class="row">
                <hr class="section-heading-spacer">
                <div class="clearfix"></div>
                <h2 class="section-heading">Sales</h2>
                <div id="SalesGrid"></div>
                <div class="row-fluid well grid-sort-group">
                    <button class="btn btn-default" data-toggle="modal" data-target="#SaleDetailEdit" id="btnEditSales">
                        Edit Detail...
                    </button>
                    <button class="btn btn-default" data-toggle="modal" data-target="#SaleDetailAdd" id="btnAddSales">
                        Add...
                    </button>
                    <button class="btn btn-default" id="btnDeleteSales">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="SaleDetailAdd">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Purchase Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Product Package ID</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_ProductPackageId" type="text" readonly="true" value="2" />
                    </dd>
                    <dt>User ID</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_UserId" type="text" readonly="true" value="1" />
                    </dd>
                    <dt>Sales Number</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_SalesNumber" type="text" />
                    </dd>
                    <dt>Sales Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_SalesDate" type="text" />
                    </dd>
                    <dt>Renewal Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_RenewalDate" type="text" />
                    </dd>
                    <dt>Expiry Date</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_ExpiryDate" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Particulars" type="text" />
                    </dd>
                    <dt>Quantity</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Quantity" type="text" />
                    </dd>
                    <dt>Price</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Price" type="text" />
                    </dd>
                    <dt>Amount</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_Amount" type="text" />
                    </dd>
                    <dt>Active</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_IsActive" type="checkbox" />
                    </dd>
                    <dt>Refunded</dt>
                    <dd>
                        <input class="form-control" id="SaleAdd_IsRefunded" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKAddSales" onclick="InsertSales()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelAddSales">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="SaleDetailEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Edit Event Detail</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>ID</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Id" type="text" readonly="true" />
                    </dd>
                    <dt>Product Package ID</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_ProductPackageId" type="text" readonly="true" value="2" />
                    </dd>
                    <dt>User ID</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_UserId" type="text" readonly="true" value="1" />
                    </dd>
                    <dt>Sales Number</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_SalesNumber" type="text" />
                    </dd>
                    <dt>Sales Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_SalesDate" type="text" />
                    </dd>
                    <dt>Renewal Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_RenewalDate" type="text" />
                    </dd>
                    <dt>Expiry Date</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_ExpiryDate" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Particulars" type="text" />
                    </dd>
                    <dt>Quantity</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Quantity" type="text" />
                    </dd>
                    <dt>Price</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Price" type="text" />
                    </dd>
                    <dt>Amount</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_Amount" type="text" />
                    </dd>
                    <dt>Active</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_IsActive" type="checkbox" />
                    </dd>
                    <dt>Refunded</dt>
                    <dd>
                        <input class="form-control" id="SaleEdit_IsRefunded" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdOKEditSales" onclick="EditSales()">
                    OK
                </button>
                <button type="button" class="btn btn-warning" data-dismiss="modal" id="CmdCancelEditSales">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<!--JAVASCRIPT-->>
<script type="text/javascript">

    var Users;
    var UserGrid;

    var Events;
    var EventGrid;

    var Sales;
    var SalesGrid;

    $(document).ready(function () {
        /*USER*/
        Users = new wijmo.collections.CollectionView(getUsers());
        UserGrid = new wijmo.grid.FlexGrid('#UserGrid');

        UserGrid.initialize({
            itemsSource: Users,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        UserGrid.trackChanges = true;

        document.getElementById('btnEditUsers').addEventListener('click', function () {
            Users.editItem(Users.currentItem);
            UpdateDialogUser(Users.currentEditItem);
        });
        document.getElementById('btnDeleteUsers').addEventListener('click', function () {
            var r = confirm("Delete User?");
            if (r == true) {
                Users.editItem(Users.currentItem);
                getID(Users.currentEditItem);
            }
        });

        /*EVENTS*/
        Events = new wijmo.collections.CollectionView(getEvents());
        EventGrid = new wijmo.grid.FlexGrid('#EventGrid');

        EventGrid.initialize({
            itemsSource: Events,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        EventGrid.trackChanges = true;

        document.getElementById('btnEditEvent').addEventListener('click', function () {
            Events.editItem(Events.currentItem);
            UpdateDialogEvents(Events.currentEditItem);
        });
        document.getElementById('btnDeleteEvent').addEventListener('click', function () {
            var r = confirm("Delete Event?");
            if (r == true) {
                Events.editItem(Events.currentItem);
                getIDEvents(Events.currentEditItem);
            }
        });

        /*SALES*/
        Sales = new wijmo.collections.CollectionView(getSales());
        SalesGrid = new wijmo.grid.FlexGrid('#SalesGrid');

        SalesGrid.initialize({
            itemsSource: Sales,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        EventGrid.trackChanges = true;

        document.getElementById('btnEditSales').addEventListener('click', function () {
            Sales.editItem(Sales.currentItem);
            UpdateDialogSales(Sales.currentEditItem);
        });
        document.getElementById('btnDeleteSales').addEventListener('click', function () {
            var r = confirm("Delete Purchase?");
            if (r == true) {
                Sales.editItem(Sales.currentItem);
                getIDSales(Sales.currentEditItem);
            }
        });

    });

    /*USER*/
    function ShowUsers() {
        document.getElementById('DivUsers').style.display = 'block';
        document.getElementById('DivEvents').style.display = 'none';
        document.getElementById('DivSales').style.display = 'none';
    }
    function getUsers() {
        var users = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/User',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        users.push({
                            Id: Results[i]["Id"],
                            UserName: Results[i]["UserName"],
                            FirstName: Results[i]["FirstName"],
                            LastName: Results[i]["LastName"],
                            EmailAddress: Results[i]["EmailAddress"],
                            PhoneNumber: Results[i]["PhoneNumber"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return users;
    }
    function InsertUsers() {

        var errorUser = ValidateUserAdd();

        if (errorUser == "") {
            var r = confirm("Insert User?");
            if (r == true) {

                //var users = new wijmo.collections.ObservableArray();
                var User = new Object();
                User.Id = 0;
                User.UserName = document.getElementById('UserAdd_UserName').value;
                User.FirstName = document.getElementById('UserAdd_FirstName').value;
                User.LastName = document.getElementById('UserAdd_LastName').value;
                User.EmailAddress = document.getElementById('UserAdd_EmailAddress').value;
                User.PhoneNumber = document.getElementById('UserAdd_PhoneNumber').value;

                var dataToPost = JSON.stringify(User);
                debugger;
                $.ajax({
                    type: "POST",
                    url: "/api/AddUser",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (data) {
                        Users.refresh();

                        alert("Success");
                    },
                    failure: function (response) {
                        alert("Error - " + response.d);
                    },
                    error: function (e) { }
                });

                window.location.reload();
                Users.refresh();
            }
        } else {
            alert(errorUser);
        }
    }
    function UpdateDialogUser(User) {
        document.getElementById('UserEdit_Id').value = User.Id !== null && typeof (User.Id) != 'undefined' ? wijmo.Globalize.format(User.Id) : '';
        document.getElementById('UserEdit_UserName').value = User.UserName ? User.UserName : '';
        document.getElementById('UserEdit_FirstName').value = User.FirstName ? User.FirstName : '';
        document.getElementById('UserEdit_LastName').value = User.LastName ? User.LastName : '';
        document.getElementById('UserEdit_EmailAddress').value = User.EmailAddress ? User.EmailAddress : '';
        document.getElementById('UserEdit_PhoneNumber').value = User.PhoneNumber ? User.PhoneNumber : '';
    }
    function EditUsers() {
        var errorUser = ValidateUserEdit();
        if (errorUser == "") {
            var r = confirm("Update User?");
            if (r == true) {

                //var users = new wijmo.collections.ObservableArray();
                var User = new Object();
                User.Id = document.getElementById('UserEdit_Id').value;
                User.UserName = document.getElementById('UserEdit_UserName').value;
                User.FirstName = document.getElementById('UserEdit_FirstName').value;
                User.LastName = document.getElementById('UserEdit_LastName').value;
                User.EmailAddress = document.getElementById('UserEdit_EmailAddress').value;
                User.PhoneNumber = document.getElementById('UserEdit_PhoneNumber').value;

                var dataToPost = JSON.stringify(User);

                $.ajax({
                    type: "PUT",
                    url: "/api/UpdateUser/" + User.Id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataToPost,
                    success: function (data) {
                        Users.refresh();
                        alert("Success");
                    },
                    failure: function (response) {
                        alert("Error - " + response.d);
                    },
                    error: function (e) { }
                });
                window.location.reload();
                Users.refresh();
            }
        } else {
            alert(errorUser);
        }
    }
    function getID(User) {
        DeleteUsers(User.Id);
    }
    function DeleteUsers(UserId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteUser/" + UserId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: UserId },
            success: function (data) {
                alert("Success");
                Users.refresh();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }

        });
        window.location.reload();
        Users.refresh();
    }
    function ValidateUserAdd() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserAdd_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserAdd_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserAdd_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserAdd_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }

        return errortext;
    }
    function ValidateUserEdit() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserEdit_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserEdit_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserEdit_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserEdit_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }

        return errortext;
    }

    /*EVENTS*/
    function ShowEvents() {
        document.getElementById('DivUsers').style.display = 'none';
        document.getElementById('DivSales').style.display = 'none';
        document.getElementById('DivEvents').style.display = 'block';
    }
    function getEvents() {
        var events = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Event',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        events.push({
                            Id: Results[i]["Id"],
                            EventDate: Results[i]["EventDate"],
                            EventDescription: Results[i]["EventDescription"],
                            Particulars: Results[i]["Particulars"],
                            URL: Results[i]["URL"],
                            EventType: Results[i]["EventType"],
                            IsRestricted: Results[i]["IsRestricted"],
                            IsArchived: Results[i]["IsArchived"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return events;
    }
    function InsertEvents() {

        var Event = new Object();
        Event.EventDate = document.getElementById('EventAdd_EventDate').value;
        Event.EventDescription = document.getElementById('EventAdd_EventDescription').value;
        Event.Particulars = document.getElementById('EventAdd_Particulars').value;
        Event.URL = document.getElementById('EventAdd_URL').value;
        Event.EventType = document.getElementById('EventAdd_EventType').value;
        Event.IsRestricted = document.getElementById('EventAdd_IsRestricted').checked;
        Event.IsArchived = document.getElementById('EventAdd_IsArchived').checked;

        var dataToPost = JSON.stringify(Event);

        $.ajax({
            type: "POST",
            url: "/api/AddEvent",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: dataToPost,
            success: function (data) {
                Events.refreshCells();
                alert("Success");
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
        Events.refreshCells();
    }
    function UpdateDialogEvents(Event) {
        document.getElementById('EventEdit_Id').value = Event.Id !== null && typeof (Event.Id) != 'undefined' ? wijmo.Globalize.format(Event.Id) : '';
        document.getElementById('EventEdit_EventDate').value = Event.EventDate ? Event.EventDate : '';
        document.getElementById('EventEdit_EventDescription').value = Event.EventDescription ? Event.EventDescription : '';
        document.getElementById('EventEdit_Particulars').value = Event.Particulars ? Event.Particulars : '';
        document.getElementById('EventEdit_URL').value = Event.URL ? Event.URL : '';
        document.getElementById('EventEdit_EventType').value = Event.EventType ? Event.EventType : '';
        document.getElementById('EventEdit_IsRestricted').checked = Event.active;
        document.getElementById('EventEdit_IsArchived').checked = Event.active;
    }
    function EditEvents() {
        //  var errorUser = ValidateUser();
        // if (errorUser == "") {
        var r = confirm("Update Event?");
        if (r == true) {

            //var users = new wijmo.collections.ObservableArray();
            var Event = new Object();
            Event.Id = document.getElementById('EventEdit_Id').value;
            Event.EventDate = document.getElementById('EventEdit_EventDate').value;
            Event.EventDescription = document.getElementById('EventEdit_EventDescription').value;
            Event.Particulars = document.getElementById('EventEdit_Particulars').value;
            Event.URL = document.getElementById('EventEdit_URL').value;
            Event.EventType = document.getElementById('EventEdit_EventType').value;
            Event.IsRestricted = document.getElementById('EventEdit_IsRestricted').checked;
            Event.IsArchived = document.getElementById('EventEdit_IsArchived').checked;

            var dataToPost = JSON.stringify(Event);
            $.ajax({
                type: "PUT",
                url: "/api/UpdateEvent/" + Event.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (data) {
                    Events.refresh();
                    alert("Success");
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });
            window.location.reload();
            Events.refresh();
        }
        // } else {
        //     alert(errorUser);
        // }
    }
    function getIDEvents(Event) {
        DeleteEvents(Event.Id);
    }
    function DeleteEvents(EventId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteEvent/" + EventId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: EventId },
            success: function (data) {
                alert("Success");
                Events.refresh();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
        Events.refresh();
    }
    /*function ValidateUser() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserAdd_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserAdd_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserAdd_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserAdd_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }
        return errortext;
    }
    */

    /*SALES*/
    function ShowSales() {
        document.getElementById('DivUsers').style.display = 'none';
        document.getElementById('DivEvents').style.display = 'none';
        document.getElementById('DivSales').style.display = 'block';
    }
    function getSales() {
        var events = new wijmo.collections.ObservableArray();
        $.ajax({
            url: '/api/Sales',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        events.push({
                            Id: Results[i]["Id"],
                            ProductPackageId: Results[i]["ProductPackageId"],
                            ProductPackage: Results[i]["ProductPackage"],
                            UserId: Results[i]["UserId"],
                            User: Results[i]["User"],
                            SalesNumber: Results[i]["SalesNumber"],
                            SalesDate: Results[i]["SalesDate"],
                            RenewalDate: Results[i]["RenewalDate"],
                            ExpiryDate: Results[i]["ExpiryDate"],
                            Particulars: Results[i]["Particulars"],
                            Quantity: Results[i]["Quantity"],
                            Price: Results[i]["Price"],
                            Amount: Results[i]["Amount"],
                            IsActive: Results[i]["IsActive"],
                            IsRefunded: Results[i]["IsRefunded"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return events;
    }
    function InsertSales() {
        var Sales = new Object();
        Sales.ProductPackageId = document.getElementById('SaleAdd_ProductPackageId').value;
        Sales.UserId = document.getElementById('SaleAdd_UserId').value;
        Sales.SalesNumber = document.getElementById('SaleAdd_SalesNumber').value;
        Sales.SalesDate = document.getElementById('SaleAdd_SalesDate').value;
        Sales.RenewalDate = document.getElementById('SaleAdd_RenewalDate').value;
        Sales.ExpiryDate = document.getElementById('SaleAdd_ExpiryDate').value;
        Sales.Particulars = document.getElementById('SaleAdd_Particulars').value;
        Sales.Quantity = document.getElementById('SaleAdd_Quantity').value;
        Sales.Price = document.getElementById('SaleAdd_Price').value;
        Sales.Amount = document.getElementById('SaleAdd_Amount').value;
        Sales.IsActive = document.getElementById('SaleAdd_IsActive').value;
        Sales.IsRefunded = document.getElementById('SaleAdd_IsRefunded').value;

        var dataToPost = JSON.stringify(Sales);
        alert(dataToPost);

        $.ajax({
            type: "POST",
            url: "/api/AddSales",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: dataToPost,
            success: function (data) {
                SalesGrid.refresh();
                alert("Success");
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });

        window.location.reload();
    }
    function UpdateDialogSales(Sale) {
        document.getElementById('SaleEdit_Id').value = Sale.Id !== null && typeof (Sale.Id) != 'undefined' ? wijmo.Globalize.format(Sale.Id) : '';
        document.getElementById('SaleEdit_ProductPackageId').value = Sale.ProductPackageId ? Sale.ProductPackageId : '';
        document.getElementById('SaleEdit_UserId').value = Sale.UserId ? Sale.UserId : '';
        document.getElementById('SaleEdit_SalesNumber').value = Sale.SalesNumber ? Sale.SalesNumber : '';
        document.getElementById('SaleEdit_SalesDate').value = Sale.SalesDate ? Sale.SalesDate : '';
        document.getElementById('SaleEdit_RenewalDate').value = Sale.RenewalDate ? Sale.RenewalDate : '';
        document.getElementById('SaleEdit_ExpiryDate').value = Sale.ExpiryDate ? Sale.ExpiryDate : '';
        document.getElementById('SaleEdit_Particulars').value = Sale.Particulars ? Sale.Particulars : '';
        document.getElementById('SaleEdit_Quantity').value = Sale.Quantity ? Sale.Quantity : '';
        document.getElementById('SaleEdit_Price').value = Sale.Price ? Sale.Price : '';
        document.getElementById('SaleEdit_Amount').value = Sale.Amount ? Sale.Amount : '';
        document.getElementById('SaleEdit_IsActive').checked = Sale.active;
        document.getElementById('SaleEdit_IsRefunded').checked = Sale.active;
    }
    function EditSales() {
        // var errorUser = ValidateUser();
        // if (errorUser == "") {
        var r = confirm("Update Purchase?");
        if (r == true) {
            //var users = new wijmo.collections.ObservableArray();
            var Sale = new Object();

            Sale.Id = document.getElementById('SaleEdit_Id').value;
            Sale.ProductPackageId = document.getElementById('SaleEdit_ProductPackageId').value;
            Sale.UserId = document.getElementById('SaleEdit_UserId').value;
            Sale.SalesNumber = document.getElementById('SaleEdit_SalesNumber').value;
            Sale.SalesDate = document.getElementById('SaleEdit_SalesDate').value;
            Sale.RenewalDate = document.getElementById('SaleEdit_RenewalDate').value;
            Sale.ExpiryDate = document.getElementById('SaleEdit_ExpiryDate').value;
            Sale.Particulars = document.getElementById('SaleEdit_Particulars').value;
            Sale.Quantity = document.getElementById('SaleEdit_Quantity').value;
            Sale.Price = document.getElementById('SaleEdit_Price').value;
            Sale.Amount = document.getElementById('SaleEdit_Amount').value;
            Sale.IsActive = document.getElementById('SaleEdit_IsActive').checked;
            Sale.IsRefunded = document.getElementById('SaleEdit_IsRefunded').checked;


            var dataToPost = JSON.stringify(Sale);

            $.ajax({
                type: "PUT",
                url: "/api/UpdateSales/" + Sale.Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataToPost,
                success: function (data) {
                    SalesGrid.refresh();
                    alert("Success");
                },
                failure: function (response) {
                    alert("Error - " + response.d);
                },
                error: function (e) { }
            });
            window.location.reload();
        }
        // } else {
        //     alert(errorUser);
        // }
    }
    function getIDSales(Sales) {
        DeleteSales(Sales.Id);
    }
    function DeleteSales(SaleId) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteSales/" + SaleId,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: SaleId },
            success: function (data) {
                alert("Success");
                Sales.refresh();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
        Sales.refresh();
    }
    /*
    function ValidateUser() {
        var errortext = "";
        //Firstname
        var fname = document.getElementById('UserAdd_FirstName').value;
        if (!(isNaN(fname))) {
            errortext += "\n Invalid First name";
        }
        //Lastname
        var lname = document.getElementById('UserAdd_LastName').value;
        if (!(isNaN(lname))) {
            errortext += "\n Invalid Last name";
        }
        //Email
        var email = document.getElementById('UserAdd_EmailAddress').value;
        var filter = /^([a-zA-Z0-9_\.\-])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        if (!filter.test(email)) {
            errortext += "\n Invalid Email Address";
        }
        //Phone number
        var phone = document.getElementById('UserAdd_PhoneNumber').value;
        if (isNaN(phone)) {
            errortext += "\n Invalid Phone number";
        }

        return errortext;
    }
    */

</script>
<script src="/lib/jquery/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>
<!--<script src="/wijmo/controls/wijmo.min.js"></script>-->
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<!--<script src="/wijmo/controls/wijmo.grid.min.js"></script>-->
<script src="/wijmo/interop/knockout/wijmo.knockout.min.js"></script>    