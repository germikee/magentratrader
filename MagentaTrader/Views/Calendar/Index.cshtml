@{
    ViewBag.Title = "Index";

    var Version = "v.Beta.1.20150222";
}

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />
<script src="/js/jquery-1.10.2.min.js"></script>
<script src="/js/knockout-3.2.0.js"></script>
<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>

<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container topnav">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"> - Calendar @Version</span></a>
        </div>
    </div>
</nav>

<div class="container">
    <div class="row">
        <h2 class="section-heading">Calendar</h2>
        <div class="col-lg-2">
            <select id="Month" class="form-control">
                <option value="0">January</option>
                <option value="1">February</option>
                <option value="2">March</option>
                <option value="3">April</option>
                <option value="4">May</option>
                <option value="5">June</option>
                <option value="6">July</option>
                <option value="7">August</option>
                <option value="8">September</option>
                <option value="9">October</option>
                <option value="10">November</option>
                <option value="11">December</option>
            </select>
        </div>
        <div class="col-lg-2">
            <select id="Year" class="form-control">
                <option value="2015">2015</option>
                <option value="2016">2016</option>
                <option value="2016">2017</option>
                <option value="2016">2018</option>
                <option value="2016">2019</option>
            </select>
        </div>
        <div class="col-lg-2">
            <select id="Delta" class="form-control">
                <option value="100">W/L (10-0) - 100%</option>
                <option value="90">W/L (9-1) - 90%</option>
                <option value="80" selected>W/L (8-2) - 80%</option>
                <option value="70">W/L (7-3) - 70%</option>
                <option value="60">W/L (6-4) - 60%</option>
                <option value="50">W/L (5-5) - 50%</option>
                <option value="40">W/L (4-6) - 40%</option>
                <option value="30">W/L (3-7) - 30%</option>
                <option value="20">W/L (2-8) - 20%</option>
                <option value="10">W/L (1-9) - 10%</option>
            </select>
        </div>
        <div class="col-lg-2">
            <input type="text" class="form-control" id="Percentage" placeholder="Percentage - [8%]">
        </div>
        <div class="col-lg-2">
            <input type="text" class="form-control" id="ClosePrice" placeholder="Price - [US $10]">
        </div>
        <div class="col-lg-2">
            <input type="text" class="form-control" id="Volume" placeholder="Volume - [1M]">
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-2">
            <button id="CmdGetCalendar" type="submit" class="btn btn-primary btn-block" onclick="CmdGetCalendar_OnClick()">Get Calendar</button>
        </div>
        <div class="col-lg-2">
            <button id="CmdSaveXLS" type="submit" class="btn btn-primary btn-block" onclick="CmdSaveXLS_OnClick()">Save Calendar</button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-lg-12">
            <div id="CalendarGrid" class="grid"></div>
        </div>
    </div>
</div>

<div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true">
    <div class="modal-dialog" style="width: 220px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <img src="/img/progress_bar.gif" />
            </div>
        </div>
    </div>
</div>

<div class="modal" id="DateDetail">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 id="DateTitle" class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="CalendarDateGrid" class="grid"></div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="btn-group col-md-7" id="naviagtionPageEvent">
                        <button type="button" class="btn btn-default" id="btnMoveToFirstPageEvent">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToPreviousPageEvent">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageEvent"></button>
                        <button type="button" class="btn btn-default" id="btnMoveToNextPageEvent">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default" id="btnMoveToLastPageEvent">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var CalendarData;
    var CalendarGrid;

    var CalendarDateData;
    var CalendarDateGrid;

    var UpData = [];
    var DownData = [];

    var btnFirstPageEvent;
    var btnPreviousPageEvent;
    var btnNextPageEvent;
    var btnLastPageEvent;
    var btnCurrentPageEvent;

    function GetData(Month, Year, Delta, Percentage, Price, Volume) {
        $('#loading').modal('show');
        $.ajax({
            url: '/api/SymbolCalendar/' + Month + '/' + Year + '/' + Delta + '/' + Percentage + '/' + Price + '/' + Volume,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                while (UpData.length > 0) UpData.pop();
                while (DownData.length > 0) DownData.pop();

                UpData = data.UpSymbols;
                DownData = data.DownSymbols;

                MakeCalendarGrid(Month - 1, Year);

                $('#loading').modal('hide');
            },
            statusCode: {
                404: function () {
                    alert('Failed');
                }
            }
        });
    }
    function GetCalendarDate(Month, Year) {
        var Sun = "", Mon = "", Tue = "", Wed = "", Thu = "", Fri = "", Sat = "";
        var data = new wijmo.collections.ObservableArray();

        // Get the start day, e.g., Monday=1, Tuesday=2, etc.
        var firstDay = new Date(Year, Month, 1);
        var startingDay = firstDay.getDay();

        // Get the month length
        var cal_days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        var monthLength = cal_days_in_month[Month];
        if (Month == 1) { //FEB
            if ((Year % 4 == 0 && Year % 100 != 0) || Year % 400 == 0) {
                monthLength = 29;
            }
        }

        var day = 1;
        for (var i = 0; i < 9; i++) {
            for (var j = 0; j <= 6; j++) {
                if (day <= monthLength && (i > 0 || j >= startingDay)) {
                    var dateData = "<br><font face='Arial Narrow' size=1 color='green'>" + FormatUpSymbols(day) + "</font><font face='Arial Narrow' size=1 color='red'>" + FormatDownSymbols(day) + "</font><br>";
                    switch (j) {
                        case 0:
                            Sun = "<font color='red'>" + day.toString() + "</font>";
                            break;
                        case 1:
                            Mon = "<a href='#' onclick='Date_OnClick(" + day.toString() + ")'>" + day.toString() + "</a>" + dateData;
                            break;
                        case 2:
                            Tue = "<a href='#' onclick='Date_OnClick(" + day.toString() + ")'>" + day.toString() + "</a>" + dateData;
                            break;
                        case 3:
                            Wed = "<a href='#' onclick='Date_OnClick(" + day.toString() + ")'>" + day.toString() + "</a>" + dateData;
                            break;
                        case 4:
                            Thu = "<a href='#' onclick='Date_OnClick(" + day.toString() + ")'>" + day.toString() + "</a>" + dateData;
                            break;
                        case 5:
                            Fri = "<a href='#' onclick='Date_OnClick(" + day.toString() + ")'>" + day.toString() + "</a>" + dateData;
                            break;
                        case 6:
                            Sat = day.toString();
                            break;
                    }
                    day++;
                }
            }
            
            if (day > monthLength) { 
                data.push({
                    Sunday: Sun,
                    Monday: Mon,
                    Tuesday: Tue,
                    Wednesday: Wed,
                    Thursday: Thu,
                    Friday: Fri,
                    Saturday: Sat
                });
                break;
            } else {
                data.push({
                    Sunday: Sun,
                    Monday: Mon,
                    Tuesday: Tue,
                    Wednesday: Wed,
                    Thursday: Thu,
                    Friday: Fri,
                    Saturday: Sat
                });
                Sun = ""; Mon = ""; Tue = ""; Wed = ""; Thu = ""; Fri = ""; Sat = "";
            }
        }
        return data;
    }
    function MakeCalendarGrid(Month, Year) {
        CalendarData = new wijmo.collections.CollectionView(GetCalendarDate(Month, Year));
        CalendarData.pageSize = 5;

        CalendarGrid.dispose();
        CalendarGrid = new wijmo.grid.FlexGrid('#CalendarGrid');
        CalendarGrid.initialize({
            columns: [
                        {
                            "header": "Sunday",
                            "binding": "Sunday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Monday",
                            "binding": "Monday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Tuesday",
                            "binding": "Tuesday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Wednesday",
                            "binding": "Wednesday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Thursday",
                            "binding": "Thursday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Friday",
                            "binding": "Friday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Saturday",
                            "binding": "Saturday",
                            "width": "7*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        }
            ],
            autoGenerateColumns: false,
            itemsSource: CalendarData,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Cell
        });
        CalendarGrid.trackChanges = true;
        CalendarGrid.itemFormatter = function (panel, r, c, cell) {
            if (panel.cellType == wijmo.grid.CellType.Cell) {
                var flex = panel.grid;
                flex.rows[r].height = 100;
            }
        };
        
    }
    function FormatUpSymbols(Day) {
        var results = "";
        for (var i = 0; i < UpData.length; i++) {
            if (parseInt(UpData[i].CalendarUpDay) == Day) {
                results = results + " [<a  href='/Software?symbol=" + UpData[i].SymbolDescription + "' target='_blank'><font face='Arial Narrow' size=1 color='green'>" + UpData[i].SymbolDescription + "</font></a>] ";
            }
        }
        return results;
    }
    function FormatDownSymbols(Day) {
        var results = "";
        for (var i = 0; i < DownData.length; i++) {
            if (parseInt(DownData[i].CalendarDownDay) == Day) {
                results = results + " [<a  href='/Software?symbol=" + DownData[i].SymbolDescription + "' target='_blank'><font face='Arial Narrow' size=1 color='red'>" + DownData[i].SymbolDescription + "</font></a>] ";
            }
        }
        return results;
    }
    function UpdateNavigateButtonsEvent() {   
        if (CalendarDateData.pageSize <= 0) {
            document.getElementById('naviagtionPageEvent').style.display = 'none';
            return;
        }
        document.getElementById('naviagtionPageEvent').style.display = 'block';
        if (CalendarDateData.pageIndex === 0) {
            btnFirstPageEvent.setAttribute('disabled', 'disabled');
            btnPreviousPageEvent.setAttribute('disabled', 'disabled');
            btnNextPageEvent.removeAttribute('disabled');
            btnLastPageEvent.removeAttribute('disabled');
        }
        else if (CalendarDateData.pageIndex === (CalendarDateData.pageCount - 1)) {
            btnFirstPageEvent.removeAttribute('disabled');
            btnPreviousPageEvent.removeAttribute('disabled');
            btnLastPageEvent.setAttribute('disabled', 'disabled');
            btnNextPageEvent.setAttribute('disabled', 'disabled');
        }
        else {
            btnFirstPageEvent.removeAttribute('disabled');
            btnPreviousPageEvent.removeAttribute('disabled');
            btnNextPageEvent.removeAttribute('disabled');
            btnLastPageEvent.removeAttribute('disabled');
        }
        btnCurrentPageEvent.innerHTML = (CalendarDateData.pageIndex + 1) + ' / ' + CalendarDateData.pageCount;
    }

    function Date_OnClick(Day) {
        var $month = parseInt(document.getElementById('Month').value);
        var $year = parseInt(document.getElementById('Year').value);

        var CalendarDate = ($month+1) + "/" + Day + "/" + $year;

        $("#DateTitle").text(CalendarDate);

        var data = new wijmo.collections.ObservableArray();

        for (i = 0; i < UpData.length; i++) {
            if (parseInt(UpData[i].CalendarUpDay) == parseInt(Day)) {
                data.push({
                    Symbol: "<a  href='/Software?symbol=" + UpData[i].SymbolDescription + "' target='_blank'><font color='green'>" + UpData[i].SymbolDescription + "</font></a>",
                    Particulars: "<font color='green'>" + "WIN/LOSS: " + (parseInt(UpData[i].CalendarUpDelta) / 10).toString() + "/" + (10 - (parseInt(UpData[i].CalendarUpDelta) / 10)).toString() + " " + UpData[i].CalendarUpPercentage.toFixed(2).toString() + "%" + "</font>"
                });
            }
        }
        for (i = 0; i < DownData.length; i++) {
            if (parseInt(DownData[i].CalendarDownDay) == parseInt(Day)) {
                data.push({
                    Symbol: "<a  href='/Software?symbol=" + DownData[i].SymbolDescription + "' target='_blank'><font color='red'>" + DownData[i].SymbolDescription + "</font>",
                    Particulars: "<font color='red'>" + "WIN/LOSS: " + (parseInt(DownData[i].CalendarDownDelta) / 10).toString() + "/" + (10 - (parseInt(DownData[i].CalendarDownDelta) / 10)).toString() + " " + (DownData[i].CalendarDownPercentage).toFixed(2).toString() + "%" + "</font>"
                });
            }
        }

        CalendarDateData = new wijmo.collections.CollectionView(data);
        CalendarDateData.pageSize = 10;
        CalendarDateData.moveToFirstPage();

        CalendarDateGrid.dispose();
        CalendarDateGrid = new wijmo.grid.FlexGrid('#CalendarDateGrid');
        CalendarDateGrid.initialize({
            columns: [
                        {
                            "header": "Symbol",
                            "binding": "Symbol",
                            "width": 100,
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        },
                        {
                            "header": "Particulars",
                            "binding": "Particulars",
                            "width": "*",
                            "allowSorting": false,
                            "isContentHtml": true,
                            "wordWrap": true
                        }
            ],
            autoGenerateColumns: false,
            itemsSource: CalendarDateData,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });
        CalendarDateGrid.trackChanges = true;

        UpdateNavigateButtonsEvent();

        $('#DateDetail').modal('show');
    }
    function CmdGetCalendar_OnClick() {
        var $month = parseInt(document.getElementById('Month').value);
        var $year = parseInt(document.getElementById('Year').value);
        var $delta = parseInt(document.getElementById('Delta').value);
        var $percentage = parseFloat(document.getElementById('Percentage').value);
        var $closePrice = parseFloat(document.getElementById('ClosePrice').value);
        var $volume = parseFloat(document.getElementById('Volume').value);
        
        $percentage = !$percentage ? 8 : $percentage;
        $closePrice = !$closePrice ? 10 : $closePrice;
        $volume = !$volume ? 1000000 : $volume;

        GetData(($month + 1), $year, $delta, $percentage, $closePrice, $volume);
    }
    function CmdSaveXLS_OnClick() {
        var CSV = '';
        var up = [];
        var down = [];

        for (i = 0; i < UpData.length; i++) {
            up.push({
                Symbol: UpData[i].SymbolDescription,
                Date: UpData[i].CalendarUpDate,
                Win: (parseInt(UpData[i].CalendarUpDelta) / 10),
                Percentage: UpData[i].CalendarUpPercentage.toFixed(2),
                Particulars: "WIN/LOSS: " + (parseInt(UpData[i].CalendarUpDelta) / 10).toString() + "/" + (10 - (parseInt(UpData[i].CalendarUpDelta) / 10)).toString() + " " + UpData[i].CalendarUpPercentage.toFixed(2).toString() + "%" 
            });
        }
        for (i = 0; i < DownData.length; i++) {
            down.push({
                Symbol: DownData[i].SymbolDescription,
                Date: DownData[i].CalendarDownDate,
                Win: (parseInt(DownData[i].CalendarDownDelta) / 10),
                Percentage: DownData[i].CalendarDownPercentage.toFixed(2),
                Particulars: "WIN/LOSS: " + (parseInt(DownData[i].CalendarDownDelta) / 10).toString() + "/" + (10 - (parseInt(DownData[i].CalendarDownDelta) / 10)).toString() + " " + (DownData[i].CalendarDownPercentage).toFixed(2).toString() + "%"
            });
        }

        CSV += 'Up Data' + '\r\n\n';

        var UpLabelRow = '';
        for (var u in up[0]) {
            UpLabelRow += u + ',';
        }
        UpLabelRow = UpLabelRow.slice(0, -1);
        CSV += UpLabelRow + '\r\n';

        for (var i = 0; i < up.length; i++) {
            var UpRow = '';
            for (var u in up[i]) {
                UpRow += '"' + up[i][u] + '",';
            }
            UpRow.slice(0, UpRow.length - 1);
            CSV += UpRow + '\r\n';
        }

        CSV += '\nDown Data' + '\r\n\n';

        var DownLabelRow = '';
        for (var d in down[0]) {
            DownLabelRow += d + ',';
        }
        DownLabelRow = DownLabelRow.slice(0, -1);
        CSV += DownLabelRow + '\r\n';

        for (var i = 0; i < down.length; i++) {
            var DownRow = '';
            for (var d in down[i]) {
                DownRow += '"' + down[i][d] + '",';
            }
            DownRow.slice(0, DownRow.length - 1);
            CSV += DownRow + '\r\n';
        }

        if (CSV == '') {
            alert("No data");
            return;
        }

        // Create filename

        var $month = parseInt(document.getElementById('Month').value);
        var $year = parseInt(document.getElementById('Year').value);
        var $delta = parseInt(document.getElementById('Delta').value);
        var $percentage = parseInt(document.getElementById('Percentage').value);
        var $closePrice = parseInt(document.getElementById('ClosePrice').value);
        var $volume = parseInt(document.getElementById('Volume').value);
        
        $percentage = !$percentage ? 8 : $percentage;
        $closePrice = !$closePrice ? 10 : $closePrice;
        $volume = !$volume ? 1000000 : $volume;

        var fileName = 'magenta_calendar_' + $month + '_' + $year + '_' + $delta + '_' + $percentage + '_' + $closePrice + '_' + $volume + '.CSV';

        // Download via <a> link

        var link = document.createElement("a");

        if (link.download !== undefined) { 
            var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
            var url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", fileName);
            link.style = "visibility:hidden";
        }

        if (navigator.msSaveBlob) { 
            link.addEventListener("click", function (event) {
                var blob = new Blob([CSV], {
                    "type": "text/csv;charset=utf-8;"
                });
                navigator.msSaveBlob(blob, fileName);
            }, false);
        }

        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);

    }

    $(document).ready(function () {
        CalendarGrid = new wijmo.grid.FlexGrid('#CalendarGrid');
        CalendarDateGrid = new wijmo.grid.FlexGrid('#CalendarDateGrid');

        btnFirstPageEvent = document.getElementById('btnMoveToFirstPageEvent');
        btnPreviousPageEvent = document.getElementById('btnMoveToPreviousPageEvent');
        btnNextPageEvent = document.getElementById('btnMoveToNextPageEvent');
        btnLastPageEvent = document.getElementById('btnMoveToLastPageEvent');
        btnCurrentPageEvent = document.getElementById('btnCurrentPageEvent');

        btnFirstPageEvent.addEventListener('click', function () {
            CalendarDateData.moveToFirstPage();
            UpdateNavigateButtonsEvent();
        });
        btnPreviousPageEvent.addEventListener('click', function () {
            CalendarDateData.moveToPreviousPage();
            UpdateNavigateButtonsEvent();
        });
        btnNextPageEvent.addEventListener('click', function () {
            CalendarDateData.moveToNextPage();
            UpdateNavigateButtonsEvent();
        });
        btnLastPageEvent.addEventListener('click', function () {
            CalendarDateData.moveToLastPage();
            UpdateNavigateButtonsEvent();
        });
    });
</script>

<script src="/lib/jquery/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<script src="/wijmo/interop/knockout/wijmo.knockout.min.js"></script>
